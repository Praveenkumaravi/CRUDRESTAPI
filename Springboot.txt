package com.praveen.createbaserepo.entity;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

@Entity
public class Product {
	@Id
	@GeneratedValue
	private int id;
	private String name;
	private String description;
	private int price;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}
}


package com.praveen.createbaserepo.repository;

import org.springframework.data.jpa.repository.JpaRepository;

import com.praveen.createbaserepo.entity.Product;

public interface ProductRepository extends JpaRepository<Product, Integer> {

}


package com.praveen.createbaserepo.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.praveen.createbaserepo.entity.Product;
import com.praveen.createbaserepo.repository.ProductRepository;

@Service
public class ProductService {
	@Autowired
	private ProductRepository productrepository;

	public Product createProduct(Product product) {
		return productrepository.save(product);
	}

	public Product getProductById(int id) {
		return productrepository.findById(id).get();
	}
	public List<Product> getAllProducts() {
		return productrepository.findAll();
	}
	public Product updateProduct(Product product) {
		return productrepository.save(product);
	}

	public void deleteProduct(int id) {
		productrepository.deleteById(id);
	}

}


package com.praveen.createbaserepo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.praveen.createbaserepo.entity.Product;
import com.praveen.createbaserepo.service.ProductService;

@RestController
public class ProductController {
	@Autowired
	public ProductService productservice;

	@PostMapping("/addProduct")
	public Product addproduct(@RequestBody Product product) {
		return productservice.createProduct(product);
	}

	@GetMapping("/product/{id}")
	public Product getProductById(@PathVariable int id) {
		return productservice.getProductById(id);
	}
	@GetMapping("/products")
	public List<Product> getProducts(){
		return productservice.getAllProducts();
	}

	@PutMapping("/updateProduct")
	public Product updateProduct(@RequestBody Product product) {
		return productservice.updateProduct(product);
	}

	@DeleteMapping("/deleteproduct/{id}")
	public void deleteProduct(@PathVariable int id) {
		productservice.deleteProduct(id);

	}
}


server.port=9090
spring.datasource.url=jdbc:h2:mem:mydb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=mydb
spring.datasource.password=
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


package com.praveen.createbaserepo;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.web.client.RestTemplate;

import com.praveen.createbaserepo.entity.Product;

@SpringBootTest
class CreateBaseRepoApplicationTests {

	@Test
	public void testgetProduct() {
		RestTemplate resttemplate=new RestTemplate();
		Product product=resttemplate.getForObject("http://localhost:9090/product/1", Product.class);
		assertNotNull(product);
		assertEquals("Samsung",product.getName());
	}
	@Test
	public void testcreateProduct() {
		RestTemplate resttemplate=new RestTemplate();
		Product product=new Product();
		product.setId(2);
		product.setName("I phone");
		product.setDescription("Looks excellent");
		product.setPrice(100000);
		Product newproduct=resttemplate.postForObject("http://localhost:9090/addProduct", product, Product.class);
		assertNotNull(newproduct);
        assertEquals("Looks excellent",newproduct.getDescription());
		}
	@Test
	public void testupdateProduct() {
		RestTemplate resttemplate=new RestTemplate();
		Product product=resttemplate.getForObject("http://localhost:9090/product/1", Product.class);
        product.setPrice(40000);
        resttemplate.put("http://localhost:9090/updateProduct", product);
	}
	@Test
	public void testdeleteProduct() {
		RestTemplate resttemplate=new RestTemplate();
		Product product=resttemplate.getForObject("http://localhost:9090/product/1", Product.class);
		resttemplate.delete("http://localhost:9090/deleteproduct/1",product);
			
		
	}

}







	
